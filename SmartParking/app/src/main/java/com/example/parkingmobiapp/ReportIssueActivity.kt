package com.example.parkingmobiapp

import android.os.Bundle
import android.widget.*
import androidx.appcompat.app.AppCompatActivity
import androidx.appcompat.app.AlertDialog
import android.util.Log

class ReportIssueActivity : AppCompatActivity() {

    companion object {
        private const val TAG = "ReportIssueActivity"
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        // Create simple layout programmatically
        val scrollView = ScrollView(this)
        val layout = LinearLayout(this).apply {
            orientation = LinearLayout.VERTICAL
            setPadding(30, 30, 30, 30)
        }

        // Back button
        val backButton = Button(this).apply {
            text = "‚Üê Quay l·∫°i"
            setOnClickListener { finish() }
        }

        // Title
        val title = TextView(this).apply {
            text = "‚ö†Ô∏è B√°o c√°o s·ª± c·ªë"
            textSize = 24f
            setPadding(0, 20, 0, 30)
        }

        // Issue type selection
        val issueLabel = TextView(this).apply {
            text = "üìã Lo·∫°i s·ª± c·ªë:"
            textSize = 18f
            setPadding(0, 0, 0, 15)
        }

        val issueSpinner = Spinner(this).apply {
            val issues = arrayOf(
                "üöó Xe b·ªã ch·∫∑n l·ªëi ra",
                "üîß Thi·∫øt b·ªã b·ªã h·ªèng",
                "üí° ƒê√®n kh√¥ng ho·∫°t ƒë·ªông",
                "üßπ Khu v·ª±c b·∫©n",
                "üö´ V·ªã tr√≠ b·ªã chi·∫øm d·ª•ng",
                "üì± Kh√°c..."
            )
            adapter = ArrayAdapter(context, android.R.layout.simple_spinner_dropdown_item, issues)
        }

        // Location input
        val locationLabel = TextView(this).apply {
            text = "üìç V·ªã tr√≠ s·ª± c·ªë:"
            textSize = 18f
            setPadding(0, 30, 0, 15)
        }

        val locationInput = EditText(this).apply {
            hint = "VD: Khu A - V·ªã tr√≠ A12"
            setPadding(20, 20, 20, 20)
        }

        // Description input
        val descLabel = TextView(this).apply {
            text = "üìù M√¥ t·∫£ chi ti·∫øt:"
            textSize = 18f
            setPadding(0, 30, 0, 15)
        }

        val descInput = EditText(this).apply {
            hint = "M√¥ t·∫£ chi ti·∫øt s·ª± c·ªë..."
            minLines = 3
            maxLines = 5
            setPadding(20, 20, 20, 20)
        }

        // Contact info
        val contactLabel = TextView(this).apply {
            text = "üìû Th√¥ng tin li√™n h·ªá:"
            textSize = 18f
            setPadding(0, 30, 0, 15)
        }

        val nameInput = EditText(this).apply {
            hint = "H·ªç v√† t√™n"
            setPadding(20, 20, 20, 20)
        }

        val phoneInput = EditText(this).apply {
            hint = "S·ªë ƒëi·ªán tho·∫°i"
            inputType = android.text.InputType.TYPE_CLASS_PHONE
            setPadding(20, 20, 20, 20)
        }

        // Submit button
        val submitButton = Button(this).apply {
            text = "üì§ G·ª≠i b√°o c√°o"
            textSize = 18f
            setPadding(0, 40, 0, 0)
            setOnClickListener {
                handleSubmit(issueSpinner, locationInput, descInput, nameInput, phoneInput)
            }
        }

        // Emergency contact
        val emergency = TextView(this).apply {
            text = "üÜò Tr∆∞·ªùng h·ª£p kh·∫©n c·∫•p: Li√™n h·ªá b·∫£o v·ªá"
            textSize = 14f
            setPadding(0, 40, 0, 0)
            setTextColor(android.graphics.Color.RED)
            setOnClickListener {
                showEmergencyDialog()
            }
        }

        // Add all views to layout
        layout.addView(backButton)
        layout.addView(title)
        layout.addView(issueLabel)
        layout.addView(issueSpinner)
        layout.addView(locationLabel)
        layout.addView(locationInput)
        layout.addView(descLabel)
        layout.addView(descInput)
        layout.addView(contactLabel)
        layout.addView(nameInput)
        layout.addView(phoneInput)
        layout.addView(submitButton)
        layout.addView(emergency)

        scrollView.addView(layout)
        setContentView(scrollView)

        showToast("‚ö†Ô∏è Form b√°o c√°o s·ª± c·ªë")
        Log.d(TAG, "‚úÖ ReportIssueActivity opened")
    }

    private fun handleSubmit(
        issueSpinner: Spinner,
        locationInput: EditText,
        descInput: EditText,
        nameInput: EditText,
        phoneInput: EditText
    ) {
        try {
            val selectedIssue = issueSpinner.selectedItem.toString()
            val location = locationInput.text.toString().trim()
            val description = descInput.text.toString().trim()
            val name = nameInput.text.toString().trim()
            val phone = phoneInput.text.toString().trim()

            // Simple validation
            if (location.isEmpty()) {
                showToast("‚ö†Ô∏è Vui l√≤ng nh·∫≠p v·ªã tr√≠ s·ª± c·ªë")
                return
            }

            if (description.isEmpty()) {
                showToast("‚ö†Ô∏è Vui l√≤ng m√¥ t·∫£ s·ª± c·ªë")
                return
            }

            if (name.isEmpty() || phone.isEmpty()) {
                showToast("‚ö†Ô∏è Vui l√≤ng nh·∫≠p th√¥ng tin li√™n h·ªá")
                return
            }

            // Show confirmation
            val reportInfo = """
                üìã B√°o c√°o s·ª± c·ªë:
                
                üî∏ Lo·∫°i: $selectedIssue
                üìç V·ªã tr√≠: $location
                üìù M√¥ t·∫£: $description
                üë§ Ng∆∞·ªùi b√°o: $name
                üìû SƒêT: $phone
                
                B√°o c√°o s·∫Ω ƒë∆∞·ª£c g·ª≠i ƒë·∫øn qu·∫£n l√Ω b√£i xe.
            """.trimIndent()

            AlertDialog.Builder(this)
                .setTitle("‚úÖ X√°c nh·∫≠n g·ª≠i b√°o c√°o")
                .setMessage(reportInfo)
                .setPositiveButton("üì§ G·ª≠i") { _, _ ->
                    submitReport(selectedIssue, location, description, name, phone)
                }
                .setNegativeButton("‚ùå H·ªßy", null)
                .show()

        } catch (e: Exception) {
            Log.e(TAG, "Error handling submit", e)
            showToast("‚ùå L·ªói khi x·ª≠ l√Ω form")
        }
    }

    private fun submitReport(issue: String, location: String, desc: String, name: String, phone: String) {
        try {
            // TODO: Send to actual server/email/system
            Log.d(TAG, "üì§ Report to submit: $issue at $location by $name")

            // For now, just show success
            AlertDialog.Builder(this)
                .setTitle("üì§ B√°o c√°o ƒë√£ ƒë∆∞·ª£c ghi nh·∫≠n")
                .setMessage("""
                    B√°o c√°o c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ghi nh·∫≠n.
                    
                    Ch√∫ng t√¥i s·∫Ω x·ª≠ l√Ω s·ªõm nh·∫•t c√≥ th·ªÉ.
                    
                    C·∫£m ∆°n b·∫°n ƒë√£ g√≥p √Ω c·∫£i thi·ªán d·ªãch v·ª•!
                """.trimIndent())
                .setPositiveButton("üëå OK") { _, _ ->
                    finish() // Close activity
                }
                .setCancelable(false)
                .show()

        } catch (e: Exception) {
            Log.e(TAG, "Error submitting report", e)
            showToast("‚ùå L·ªói khi g·ª≠i b√°o c√°o")
        }
    }

    private fun showEmergencyDialog() {
        AlertDialog.Builder(this)
            .setTitle("üìû Li√™n h·ªá kh·∫©n c·∫•p")
            .setMessage("Tr∆∞·ªùng h·ª£p kh·∫©n c·∫•p, vui l√≤ng li√™n h·ªá tr·ª±c ti·∫øp v·ªõi b·∫£o v·ªá ho·∫∑c qu·∫£n l√Ω b√£i xe.")
            .setPositiveButton("üëå Hi·ªÉu r·ªìi", null)
            .show()
    }

    private fun showToast(message: String) {
        Toast.makeText(this, message, Toast.LENGTH_SHORT).show()
    }
}