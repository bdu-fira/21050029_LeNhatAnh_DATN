// Generated by view binder compiler. Do not edit!
package com.example.parkingmobiapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.parkingmobiapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView ivBackButton;

  @NonNull
  public final LinearLayout llClearData;

  @NonNull
  public final LinearLayout llNotificationSound;

  @NonNull
  public final LinearLayout llRefreshInterval;

  @NonNull
  public final Switch switchAutoRefresh;

  @NonNull
  public final Switch switchEnableNotifications;

  @NonNull
  public final Switch switchEnableVibration;

  @NonNull
  public final TextView tvCurrentPlateNumber;

  @NonNull
  public final TextView tvCurrentSound;

  @NonNull
  public final TextView tvOwnerName;

  @NonNull
  public final TextView tvRefreshInterval;

  @NonNull
  public final TextView tvRegistrationStatus;

  @NonNull
  public final View viewRegistrationStatus;

  private ActivitySettingsBinding(@NonNull ScrollView rootView, @NonNull ImageView ivBackButton,
      @NonNull LinearLayout llClearData, @NonNull LinearLayout llNotificationSound,
      @NonNull LinearLayout llRefreshInterval, @NonNull Switch switchAutoRefresh,
      @NonNull Switch switchEnableNotifications, @NonNull Switch switchEnableVibration,
      @NonNull TextView tvCurrentPlateNumber, @NonNull TextView tvCurrentSound,
      @NonNull TextView tvOwnerName, @NonNull TextView tvRefreshInterval,
      @NonNull TextView tvRegistrationStatus, @NonNull View viewRegistrationStatus) {
    this.rootView = rootView;
    this.ivBackButton = ivBackButton;
    this.llClearData = llClearData;
    this.llNotificationSound = llNotificationSound;
    this.llRefreshInterval = llRefreshInterval;
    this.switchAutoRefresh = switchAutoRefresh;
    this.switchEnableNotifications = switchEnableNotifications;
    this.switchEnableVibration = switchEnableVibration;
    this.tvCurrentPlateNumber = tvCurrentPlateNumber;
    this.tvCurrentSound = tvCurrentSound;
    this.tvOwnerName = tvOwnerName;
    this.tvRefreshInterval = tvRefreshInterval;
    this.tvRegistrationStatus = tvRegistrationStatus;
    this.viewRegistrationStatus = viewRegistrationStatus;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_back_button;
      ImageView ivBackButton = ViewBindings.findChildViewById(rootView, id);
      if (ivBackButton == null) {
        break missingId;
      }

      id = R.id.ll_clear_data;
      LinearLayout llClearData = ViewBindings.findChildViewById(rootView, id);
      if (llClearData == null) {
        break missingId;
      }

      id = R.id.ll_notification_sound;
      LinearLayout llNotificationSound = ViewBindings.findChildViewById(rootView, id);
      if (llNotificationSound == null) {
        break missingId;
      }

      id = R.id.ll_refresh_interval;
      LinearLayout llRefreshInterval = ViewBindings.findChildViewById(rootView, id);
      if (llRefreshInterval == null) {
        break missingId;
      }

      id = R.id.switch_auto_refresh;
      Switch switchAutoRefresh = ViewBindings.findChildViewById(rootView, id);
      if (switchAutoRefresh == null) {
        break missingId;
      }

      id = R.id.switch_enable_notifications;
      Switch switchEnableNotifications = ViewBindings.findChildViewById(rootView, id);
      if (switchEnableNotifications == null) {
        break missingId;
      }

      id = R.id.switch_enable_vibration;
      Switch switchEnableVibration = ViewBindings.findChildViewById(rootView, id);
      if (switchEnableVibration == null) {
        break missingId;
      }

      id = R.id.tv_current_plate_number;
      TextView tvCurrentPlateNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentPlateNumber == null) {
        break missingId;
      }

      id = R.id.tv_current_sound;
      TextView tvCurrentSound = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentSound == null) {
        break missingId;
      }

      id = R.id.tv_owner_name;
      TextView tvOwnerName = ViewBindings.findChildViewById(rootView, id);
      if (tvOwnerName == null) {
        break missingId;
      }

      id = R.id.tv_refresh_interval;
      TextView tvRefreshInterval = ViewBindings.findChildViewById(rootView, id);
      if (tvRefreshInterval == null) {
        break missingId;
      }

      id = R.id.tv_registration_status;
      TextView tvRegistrationStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvRegistrationStatus == null) {
        break missingId;
      }

      id = R.id.view_registration_status;
      View viewRegistrationStatus = ViewBindings.findChildViewById(rootView, id);
      if (viewRegistrationStatus == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ScrollView) rootView, ivBackButton, llClearData,
          llNotificationSound, llRefreshInterval, switchAutoRefresh, switchEnableNotifications,
          switchEnableVibration, tvCurrentPlateNumber, tvCurrentSound, tvOwnerName,
          tvRefreshInterval, tvRegistrationStatus, viewRegistrationStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
