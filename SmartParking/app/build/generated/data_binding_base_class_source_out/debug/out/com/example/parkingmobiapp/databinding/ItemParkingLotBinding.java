// Generated by view binder compiler. Do not edit!
package com.example.parkingmobiapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.parkingmobiapp.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemParkingLotBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView textViewAddress;

  @NonNull
  public final TextView textViewAvailability;

  @NonNull
  public final TextView textViewDistance;

  @NonNull
  public final TextView textViewName;

  @NonNull
  public final TextView textViewPrice;

  @NonNull
  public final View viewStatusIndicator;

  private ItemParkingLotBinding(@NonNull MaterialCardView rootView,
      @NonNull TextView textViewAddress, @NonNull TextView textViewAvailability,
      @NonNull TextView textViewDistance, @NonNull TextView textViewName,
      @NonNull TextView textViewPrice, @NonNull View viewStatusIndicator) {
    this.rootView = rootView;
    this.textViewAddress = textViewAddress;
    this.textViewAvailability = textViewAvailability;
    this.textViewDistance = textViewDistance;
    this.textViewName = textViewName;
    this.textViewPrice = textViewPrice;
    this.viewStatusIndicator = viewStatusIndicator;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemParkingLotBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemParkingLotBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_parking_lot, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemParkingLotBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.textViewAddress;
      TextView textViewAddress = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddress == null) {
        break missingId;
      }

      id = R.id.textViewAvailability;
      TextView textViewAvailability = ViewBindings.findChildViewById(rootView, id);
      if (textViewAvailability == null) {
        break missingId;
      }

      id = R.id.textViewDistance;
      TextView textViewDistance = ViewBindings.findChildViewById(rootView, id);
      if (textViewDistance == null) {
        break missingId;
      }

      id = R.id.textViewName;
      TextView textViewName = ViewBindings.findChildViewById(rootView, id);
      if (textViewName == null) {
        break missingId;
      }

      id = R.id.textViewPrice;
      TextView textViewPrice = ViewBindings.findChildViewById(rootView, id);
      if (textViewPrice == null) {
        break missingId;
      }

      id = R.id.viewStatusIndicator;
      View viewStatusIndicator = ViewBindings.findChildViewById(rootView, id);
      if (viewStatusIndicator == null) {
        break missingId;
      }

      return new ItemParkingLotBinding((MaterialCardView) rootView, textViewAddress,
          textViewAvailability, textViewDistance, textViewName, textViewPrice, viewStatusIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
