// Generated by view binder compiler. Do not edit!
package com.example.parkingmobiapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.parkingmobiapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NotificationItemEnhancedBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView btnExpandCollapse;

  @NonNull
  public final TextView btnNotificationAction;

  @NonNull
  public final ImageView ivNotificationIcon;

  @NonNull
  public final LinearLayout llActionButtons;

  @NonNull
  public final LinearLayout llDataTags;

  @NonNull
  public final LinearLayout llExpiryInfo;

  @NonNull
  public final ProgressBar progressNotification;

  @NonNull
  public final TextView tvExpiryTime;

  @NonNull
  public final TextView tvNotificationDetails;

  @NonNull
  public final TextView tvNotificationMessage;

  @NonNull
  public final TextView tvNotificationTime;

  @NonNull
  public final TextView tvNotificationTitle;

  @NonNull
  public final TextView tvNotificationType;

  @NonNull
  public final TextView tvPriorityBadge;

  @NonNull
  public final View viewImportantOverlay;

  @NonNull
  public final View viewPriorityIndicator;

  @NonNull
  public final View viewUnreadIndicator;

  private NotificationItemEnhancedBinding(@NonNull CardView rootView,
      @NonNull TextView btnExpandCollapse, @NonNull TextView btnNotificationAction,
      @NonNull ImageView ivNotificationIcon, @NonNull LinearLayout llActionButtons,
      @NonNull LinearLayout llDataTags, @NonNull LinearLayout llExpiryInfo,
      @NonNull ProgressBar progressNotification, @NonNull TextView tvExpiryTime,
      @NonNull TextView tvNotificationDetails, @NonNull TextView tvNotificationMessage,
      @NonNull TextView tvNotificationTime, @NonNull TextView tvNotificationTitle,
      @NonNull TextView tvNotificationType, @NonNull TextView tvPriorityBadge,
      @NonNull View viewImportantOverlay, @NonNull View viewPriorityIndicator,
      @NonNull View viewUnreadIndicator) {
    this.rootView = rootView;
    this.btnExpandCollapse = btnExpandCollapse;
    this.btnNotificationAction = btnNotificationAction;
    this.ivNotificationIcon = ivNotificationIcon;
    this.llActionButtons = llActionButtons;
    this.llDataTags = llDataTags;
    this.llExpiryInfo = llExpiryInfo;
    this.progressNotification = progressNotification;
    this.tvExpiryTime = tvExpiryTime;
    this.tvNotificationDetails = tvNotificationDetails;
    this.tvNotificationMessage = tvNotificationMessage;
    this.tvNotificationTime = tvNotificationTime;
    this.tvNotificationTitle = tvNotificationTitle;
    this.tvNotificationType = tvNotificationType;
    this.tvPriorityBadge = tvPriorityBadge;
    this.viewImportantOverlay = viewImportantOverlay;
    this.viewPriorityIndicator = viewPriorityIndicator;
    this.viewUnreadIndicator = viewUnreadIndicator;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static NotificationItemEnhancedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotificationItemEnhancedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notification_item_enhanced, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotificationItemEnhancedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_expand_collapse;
      TextView btnExpandCollapse = ViewBindings.findChildViewById(rootView, id);
      if (btnExpandCollapse == null) {
        break missingId;
      }

      id = R.id.btn_notification_action;
      TextView btnNotificationAction = ViewBindings.findChildViewById(rootView, id);
      if (btnNotificationAction == null) {
        break missingId;
      }

      id = R.id.iv_notification_icon;
      ImageView ivNotificationIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivNotificationIcon == null) {
        break missingId;
      }

      id = R.id.ll_action_buttons;
      LinearLayout llActionButtons = ViewBindings.findChildViewById(rootView, id);
      if (llActionButtons == null) {
        break missingId;
      }

      id = R.id.ll_data_tags;
      LinearLayout llDataTags = ViewBindings.findChildViewById(rootView, id);
      if (llDataTags == null) {
        break missingId;
      }

      id = R.id.ll_expiry_info;
      LinearLayout llExpiryInfo = ViewBindings.findChildViewById(rootView, id);
      if (llExpiryInfo == null) {
        break missingId;
      }

      id = R.id.progress_notification;
      ProgressBar progressNotification = ViewBindings.findChildViewById(rootView, id);
      if (progressNotification == null) {
        break missingId;
      }

      id = R.id.tv_expiry_time;
      TextView tvExpiryTime = ViewBindings.findChildViewById(rootView, id);
      if (tvExpiryTime == null) {
        break missingId;
      }

      id = R.id.tv_notification_details;
      TextView tvNotificationDetails = ViewBindings.findChildViewById(rootView, id);
      if (tvNotificationDetails == null) {
        break missingId;
      }

      id = R.id.tv_notification_message;
      TextView tvNotificationMessage = ViewBindings.findChildViewById(rootView, id);
      if (tvNotificationMessage == null) {
        break missingId;
      }

      id = R.id.tv_notification_time;
      TextView tvNotificationTime = ViewBindings.findChildViewById(rootView, id);
      if (tvNotificationTime == null) {
        break missingId;
      }

      id = R.id.tv_notification_title;
      TextView tvNotificationTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvNotificationTitle == null) {
        break missingId;
      }

      id = R.id.tv_notification_type;
      TextView tvNotificationType = ViewBindings.findChildViewById(rootView, id);
      if (tvNotificationType == null) {
        break missingId;
      }

      id = R.id.tv_priority_badge;
      TextView tvPriorityBadge = ViewBindings.findChildViewById(rootView, id);
      if (tvPriorityBadge == null) {
        break missingId;
      }

      id = R.id.view_important_overlay;
      View viewImportantOverlay = ViewBindings.findChildViewById(rootView, id);
      if (viewImportantOverlay == null) {
        break missingId;
      }

      id = R.id.view_priority_indicator;
      View viewPriorityIndicator = ViewBindings.findChildViewById(rootView, id);
      if (viewPriorityIndicator == null) {
        break missingId;
      }

      id = R.id.view_unread_indicator;
      View viewUnreadIndicator = ViewBindings.findChildViewById(rootView, id);
      if (viewUnreadIndicator == null) {
        break missingId;
      }

      return new NotificationItemEnhancedBinding((CardView) rootView, btnExpandCollapse,
          btnNotificationAction, ivNotificationIcon, llActionButtons, llDataTags, llExpiryInfo,
          progressNotification, tvExpiryTime, tvNotificationDetails, tvNotificationMessage,
          tvNotificationTime, tvNotificationTitle, tvNotificationType, tvPriorityBadge,
          viewImportantOverlay, viewPriorityIndicator, viewUnreadIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
